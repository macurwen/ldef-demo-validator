<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ldef-demo-validator</groupId>
    <artifactId>ldef-demo-validator</artifactId>
    <version>1.0</version>

    <properties>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
         <maven.compiler.source>1.8</maven.compiler.source>
         <maven.compiler.target>1.8</maven.compiler.target>
        
         <fabric8.version>2.2.105</fabric8.version>
         <docker.maven.plugin.version>0.15.8</docker.maven.plugin.version>
         
         <!-- fabric8 version -->
         <fabric8.version>2.2.105</fabric8.version>
         <docker.maven.plugin.version>0.15.8</docker.maven.plugin.version>

         <!-- Docker & Fabric8 Configs -->
         <docker.from>fabric8/java-jboss-openjdk8-jdk:1.1.4</docker.from>
         <fabric8.dockerUser>msa/</fabric8.dockerUser>
         <docker.image>${fabric8.dockerUser}${project.artifactId}:${project.version}</docker.image>
         <docker.port.container.jolokia>8778</docker.port.container.jolokia>
         <docker.port.container.http>8080</docker.port.container.http>

         <!-- Openshift service customization -->
         <fabric8.service.name>${project.artifactId}</fabric8.service.name>
         <fabric8.service.port>8080</fabric8.service.port>
         <fabric8.service.containerPort>8080</fabric8.service.containerPort>
         <fabric8.service.type>LoadBalancer</fabric8.service.type>
         <fabric8.label.group>msa</fabric8.label.group>
         <fabric8.iconRef>icons/java</fabric8.iconRef>
        
         <camel.version>2.10.6</camel.version>
         <hapi.version.stable>2.2</hapi.version.stable>
         <hawtio-version>1.4.59</hawtio-version>
    </properties>

    <dependencies>
        <!-- CAMEL -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-mina</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-mina2</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-ftp</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-hl7</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-broker</artifactId>
            <version>5.12.0</version>
        </dependency>


        <!-- HAPI -->
        <dependency>
            <groupId>ca.uhn.hapi</groupId>
            <artifactId>hapi-base</artifactId>
            <version>${hapi.version.stable}</version>
        </dependency>
        <dependency>
            <groupId>ca.uhn.hapi</groupId>
            <artifactId>hapi-structures-v22</artifactId>
            <version>${hapi.version.stable}</version>
        </dependency>
        <dependency>
            <groupId>ca.uhn.hapi</groupId>
            <artifactId>hapi-structures-v251</artifactId>
            <version>${hapi.version.stable}</version>
        </dependency>

        <!-- Cassandra -->
        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
            <version>2.1.7</version>
        </dependency>

        <!-- Mongo -->
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>2.10.1</version>
        </dependency>

        <!-- HAPI -->
        <dependency>
            <groupId>ca.uhn.hapi</groupId>
            <artifactId>hapi-base</artifactId>
            <version>${hapi.version.stable}</version>
        </dependency>
        <dependency>
            <groupId>ca.uhn.hapi</groupId>
            <artifactId>hapi-structures-v22</artifactId>
            <version>${hapi.version.stable}</version>
        </dependency>
        <dependency>
            <groupId>ca.uhn.hapi</groupId>
            <artifactId>hapi-structures-v251</artifactId>
            <version>${hapi.version.stable}</version>
        </dependency>

        <!-- XStream -->

        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.2.2</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>2.2.2</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
        </dependency>

        <!-- Active MQ -->

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-all</artifactId>
            <version>5.10.0</version>
        </dependency>

        <!-- Hawt.IO -->

        <dependency>
            <groupId>io.hawt</groupId>
            <artifactId>hawtio-embedded</artifactId>
            <version>${hawtio-version}</version>
        </dependency>

    </dependencies>

    <build>
         <finalName>ldef-dem-validator</finalName>
        <defaultGoal>install</defaultGoal>

        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>

            <!-- allows the route to be ran via 'mvn camel:run' -->
            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-maven-plugin</artifactId>
                <version>${camel.version}</version>
            </plugin>

            <!-- allows the route to be ran via 'mvn hawtio:run/camel' -->
            <plugin>
                <groupId>io.hawt</groupId>
                <artifactId>hawtio-maven-plugin</artifactId>
                <version>${hawtio-version}</version>
                <configuration>
                    <!-- configuration options goes here -->
                    <logClasspath>true</logClasspath>
                    <port>5555</port>
                    <!--<mainClass>hl7integration.camel.MainApp</mainClass>-->
                    <applicationContext>meta-inf/spring/*.xml</applicationContext>
                </configuration>
            </plugin>
            <plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>${fabric8.version}</version>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.plugin.version}</version>
				<configuration>
					<images>
						<image>
							<name>${docker.image}</name>
							<build>
								<from>${docker.from}</from>
								<assembly>
									<basedir>/app</basedir>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								<env>
									<JAVA_APP_JAR>${project.build.finalName}.jar</JAVA_APP_JAR>
								</env>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>    

        </plugins>
    </build>


</project>
